--
-- CREATE SEQUENCE FOR THE "GROUPS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_GROUPS_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_GROUPS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_GROUPS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_GROUPS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "USERS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_USERS_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_USERS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_USERS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_USERS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "GROUPS_USERS_MAP" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_GROUPS_USERS_MA_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_GROUPS_USERS_MA_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_GROUPS_USERS_MAP FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_GROUPS_USERS_MA_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "USER_AUTH_METHODS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_USER_AUTH_METHO_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_USER_AUTH_METHO_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_USER_AUTH_METHODS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_USER_AUTH_METHO_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "USER_AUTHS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_USER_AUTHS_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_USER_AUTHS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_USER_AUTHS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_USER_AUTHS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "PLUGINS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_PLUGINS_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_PLUGINS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_PLUGINS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_PLUGINS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "PAGES" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_PAGES_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_PAGES_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_PAGES FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_PAGES_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "TABLES" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_TABLES_ID_SEQ START WITH 1001 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_TABLES_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_TABLES FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_TABLES_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "OBJECTS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_OBJECTS_ID_SEQ START WITH 10001 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_OBJECTS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_OBJECTS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_OBJECTS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "ACCESS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_ACCESS_ID_SEQ START WITH 10001 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_ACCESS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_ACCESS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_ACCESS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "PARAMETERS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_PARAMETERS_ID_SEQ START WITH 10001 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_PARAMETERS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_PARAMETERS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_PARAMETERS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "PROCESSUS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_PROCESSUS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_PROCESSUS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_PROCESSUS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_PROCESSUS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "JOB" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_JOB_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_JOB_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_JOB FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_JOB_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "JOB_SCHEDULED" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_JOB_SCHEDULED_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_JOB_SCHEDULED_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_JOB_SCHEDULED FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_JOB_SCHEDULED_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "EVENT_LOGS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CORE_EVENT_LOGS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CORE_EVENT_LOGS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CORE_EVENT_LOGS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CORE_EVENT_LOGS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/