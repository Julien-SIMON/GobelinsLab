--
-- CREATE SEQUENCE FOR THE "CMDB_DEVICES" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEVICES_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEVICES_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEVICES FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEVICES_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_STATUS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_STATUS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_STATUS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_STATUS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_STATUS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_OS_CPU" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_OS_CPU_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_OS_CPU_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_OS_CPU FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_OS_CPU_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_OS_SERVICES" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_OS_SERVICES_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_OS_SERVICES_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_OS_SERVICES FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_OS_SERVICES_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_OS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_OS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_OS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_OS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_OS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_OS_DISKS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_OS_DISKS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_OS_DISKS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_OS_DISKS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_OS_DISKS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_OS_FS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_OS_FS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_OS_FS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_OS_FS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_OS_FS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_OS_FS_UP" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_OS_FS_UP_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_OS_FS_UP_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_OS_FS_UP FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_OS_FS_UP_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_OS_CREDS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_OS_CREDS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_OS_CREDS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_OS_CREDS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_OS_CREDS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/


--
-- CREATE SEQUENCE FOR THE "CMDB_PROJECTS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_PROJECTS_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_PROJECTS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_PROJECTS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_PROJECTS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/


--
-- CREATE SEQUENCE FOR THE "CMDB_ENVIRONMENTS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_ENVIRONMENTS_ID_SEQ START WITH 101 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_ENVIRONMENTS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_ENVIRONMENTS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_ENVIRONMENTS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/


--
-- CREATE SEQUENCE FOR THE "CMDB_DEV_PRO_ENV_MAP" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DEV_PRO_ENV_MAP_ID_SEQ START WITH 1001 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DEV_PRO_ENV_MAP_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DEV_PRO_ENV_MAP FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DEV_PRO_ENV_MAP_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/


--
-- CREATE SEQUENCE FOR THE "CMDB_DB_INSTANCES" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DB_INSTANCES_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DB_INSTANCES_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DB_INSTANCES FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DB_INSTANCES_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DB_INSTANCE_UP" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DB_INSTANCE_UP_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DB_INSTANCE_UP_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DB_INSTANCE_UP FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DB_INSTANCE_UP_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DB_INSTANCE_STATUS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DB_INSTANCE_CRE_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DB_INSTANCE_CRE_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DB_INSTANCE_CREDS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DB_INSTANCE_CRE_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/


--
-- CREATE SEQUENCE FOR THE "CMDB_DATABASES" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DATABASES_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DATABASES_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DATABASES FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DATABASES_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DB_BACKUPS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DB_BACKUPS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DB_BACKUPS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DB_BACKUPS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DB_BACKUPS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/

--
-- CREATE SEQUENCE FOR THE "CMDB_DB_FILEGROUPS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DB_FILEGROUPS_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DB_FILEGROUPS_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DB_FILEGROUPS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DB_FILEGROUPS_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/


--
-- CREATE SEQUENCE FOR THE "CMDB_DB_FILEGROUP_STATUS" TABLE
--
CREATE SEQUENCE GLDEV.GL_CMDB_DB_FILEGROUP_ST_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER GLDEV.GL_CMDB_DB_FILEGROUP_ST_ID_TRG BEFORE
INSERT
ON GLDEV.GL_CMDB_DB_FILEGROUP_STATUS FOR EACH ROW WHEN
(
  NEW.ID IS NULL
)
BEGIN
SELECT
GL_CMDB_DB_FILEGROUP_ST_ID_SEQ.NEXTVAL
INTO
:NEW.ID
FROM
DUAL;
END;
/
